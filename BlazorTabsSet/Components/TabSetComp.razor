@typeparam TOptions

<CascadingValue Value="this" Name="TabSet">
    <nav>
        <div class="container">
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                @foreach (TabPageComp<TOptions> tabPage in Pages)
                {
                    @TabHeadersFragment(tabPage)
                }

            </div>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="container">
            @TabsFragment
        </div>
    </div>
</CascadingValue>

@code {
    [Parameter]
    public RenderFragment TabsFragment { get; set; }

    [Parameter]
    public RenderFragment<TabPageComp<TOptions>> TabHeadersFragment { get; set; }

    private TabPageComp<TOptions> _activePage { get; set; }
    public List<TabPageComp<TOptions>> Pages { get; set; } = new List<TabPageComp<TOptions>>();
    public TabPageComp<TOptions> ActivePage => _activePage;
    internal void AddPage(TabPageComp<TOptions> tabPage)
    {
        Pages.Add(tabPage);
        if (Pages.Count == 1)
            _activePage = tabPage;
        StateHasChanged();
    }

    public void ActivatePage(TabPageComp<TOptions> tabPage)
    {
        _activePage = tabPage;
        StateHasChanged();
    }
    public int NewPageId()
    {
        return (Pages.Count) + 1;
    }
}